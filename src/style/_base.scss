@import 'vars';
@import 'mixins';

// * {
//   outline: red dashed 1px;
// }

body {
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-color: $background;
  background-size: cover;
  color: $off-white;
  font-family: $poppins;
  text-align: center;
  width:100%;
}

img {
  max-width: 900px;
}

p {
  margin: 2em auto;
  max-width: $max-width;
}

input {
  margin-right: 10px;
}

// -------------------------------------------------------------------------------------------------
// TYPOGRAPHY STYLING FOR HERO TEXT AT THE TOP OF EACH PAGE
// -------------------------------------------------------------------------------------------------
.hero-text {
  color: $buttonBE;
  font-size: 3em;
  line-height: 1.2;
  margin: 4em auto 2em auto;

  @include sm {
    font-size: 1.5em;
    margin: 6em auto 1em auto;
  }
}

.external-link {
  text-decoration: none;
  color: $buttonBE;
  font-weight: 400;

  &:hover {
    color: $buttonAE;
  }
}

strong {
  color: $buttonAE;
}

// -------------------------------------------------------------------------------------------------
// PARALLAX IMAGE SCROLLING
// -------------------------------------------------------------------------------------------------
.parallax {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

// -------------------------------------------------------------------------------------------------
// SVG STYLING
// -------------------------------------------------------------------------------------------------
.devicon-svg {
  width: 7em;
}

.other-svgs {
  margin:  0 1em;
  width: 5em;
}

// -------------------------------------------------------------------------------------------------
// LANDING PAGE STYLING
// -------------------------------------------------------------------------------------------------
.landing-page {
  margin: 5vw auto;
  width: 80%;
}

// -------------------------------------------------------------------------------------------------
// PAGE LOAD
// -------------------------------------------------------------------------------------------------
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:0.5s;
  -moz-animation-duration:0.5s;
  animation-duration:0.5s;

  -webkit-animation-delay: 0.2s;
  -moz-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

// -------------------------------------------------------------------------------------------------
// BUTTON STYLING
// -------------------------------------------------------------------------------------------------
button a {
  color: black;
  font-size: 1.5em;
  text-decoration: none;
}

.raise {  
  background: none;
  border: 2px solid;
  border-radius: 3rem;
  color: var(--color);
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
  transition: 0.25s;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
    color: $buttonAE;
    text-shadow: 0 1px;
    transform: translateY(-0.25em);
  }
}

$colors: (
  raise: $buttonBE,
);

@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 180deg)};
  }
}